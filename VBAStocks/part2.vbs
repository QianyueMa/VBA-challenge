' Instructions:' Part 2: Challenges' * Include all of Part 1.' * Create a second table that returns the stock with the "Greatest % increase", "Greatest % decrease" and "Greatest total volume".' * Make the appropriate adjustments to the VBA script that will allow it to run on every worksheet, i.e., every year, just by running the VBA script once.' -------------------------------------------------' Copy all the codes from Part 1Sub tickerloop2()            ' Define the variables        Dim ticker_name As String            Dim ticker_volume As Double        ticker_volume = 0        Dim summary_ticker_row As Integer        summary_ticker_row = 2                Dim open_price As Double        open_price = Cells(2, 3).Value                Dim close_price As Double        Dim yearly_change As Double        Dim percent_change As Double        Application.ScreenUpdating = False        Application.Calculation = xlCalculationManual        ' Create names of the headers for the analysis summary table        Cells(1, 9).Value = "Ticker"        Cells(1, 10).Value = "Yearly Change"        Cells(1, 11).Value = "Percent Change"        Cells(1, 12).Value = "Total Stock Volume"        ' The last row of the first column; Count the number of rows in the first column        last_row = Cells(Rows.Count, 1).End(xlUp).Row        ' Loop through the rows        For i = 2 To last_row            If Cells(i + 1, 1).Value <> Cells(i, 1).Value Then                        ticker_name = Cells(i, 1).Value                Range("I" & summary_ticker_row).Value = ticker_name                ticker_volume = tickervolume + Cells(i, 7).Value                Range("L" & summary_ticker_row).Value = ticker_volume                                close_price = Cells(i, 6).Value                yearly_change = (close_price - open_price)                Range("J" & summary_ticker_row).Value = yearly_change                    ' Specify when the divisor is 0 (i.e., when the open_price = 0)                    If (open_price = 0) Then                        percent_change = 0                    Else                        percent_change = yearly_change / open_price                    End If                ' Print the yearly change for each ticker in the summary table                Range("K" & summary_ticker_row).Value = percent_change                Range("K" & summary_ticker_row).NumberFormat = "0.00%"                   ' Reset the row counter.                summary_ticker_row = summary_ticker_row + 1                ' Reset volume of trade to zero                ticker_volume = 0                ' Reset the opening price                open_price = Cells(i + 1, 3)                        Else                             'Add the volume of trade              ticker_volume = ticker_volume + Cells(i, 7).Value                        End If                Next i    ' Conditional formatting that will highlight positive change in green and negative change in red    last_row_summary_table = Cells(Rows.Count, 9).End(xlUp).Row        For i = 2 To last_row_summary_table            If Cells(i, 10).Value > 0 Then                Cells(i, 10).Interior.ColorIndex = 4            Else                Cells(i, 10).Interior.ColorIndex = 3            End If    Next i            ' -------------------------------------------------    ' Part 2 starts here        ' Return the stock with the "Greatest % increase", "Greatest % decrease" and "Greatest total volume".        ' Create names for the headers for the second analysis table        Cells(2, 15).Value = "Greatest % Increase"        Cells(3, 15).Value = "Greatest % Decrease"        Cells(4, 15).Value = "Greatest Total Volume"        Cells(1, 16).Value = "Ticker"        Cells(1, 17).Value = "Value"        ' Iteration        For i = 2 To last_row_summary_table                    ' Greatest % increase            If Cells(i, 11).Value = Application.WorksheetFunction.Max(Range("K2:K" & last_row_summary_table)) Then                Cells(2, 16).Value = Cells(i, 9).Value                Cells(2, 17).Value = Cells(i, 11).Value                Cells(2, 17).NumberFormat = "0.00%"            ' Greatest % decrease            ElseIf Cells(i, 11).Value = Application.WorksheetFunction.Min(Range("K2:K" & last_row_summary_table)) Then                Cells(3, 16).Value = Cells(i, 9).Value                Cells(3, 17).Value = Cells(i, 11).Value                Cells(3, 17).NumberFormat = "0.00%"                        ' Greatest total volume            ElseIf Cells(i, 12).Value = Application.WorksheetFunction.Max(Range("L2:L" & last_row_summary_table)) Then                Cells(4, 16).Value = Cells(i, 9).Value                Cells(4, 17).Value = Cells(i, 12).Value                        End If                Next iApplication.ScreenUpdating = TrueApplication.Calculation = xlCalculationAutomaticEnd Sub